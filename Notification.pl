use strict;
use Data::Dumper;
use FindBin;
use POSIX;
use JSON::XS qw(encode_json decode_json);
use File::Slurp qw(read_file write_file);

my $Bin=$FindBin::Bin;

if(@ARGV < 1){
	print "perl $0 <in dir>\n";
	exit(1);
}
my $indir=shift;

my $filerecord="$Bin/FilesHash/Files.hash";
my $json=read_file($filerecord, { binmode => ':raw' });
my %FileHash=%{ decode_json $json };

my %EmailList;
my @EmailList=("yangbicheng","lynn","tianwei","ivon","cheryll","shinan","Avis");

for(my $i=0;$i<@EmailList;$i++){
	if($i < 3){
		$EmailList{CC}.="\"$FileHash{$EmailList[$i]}\",";
	}else{
		$EmailList{TO}.="\"$FileHash{$EmailList[$i]}\",";
	}
}

my $B=$indir."/BadRunsInfo.xls";
my $G=$indir."/SampleInfo.xls";

my %ToEmail;
(open G,$G) || die $!;

if(-e $B){
	(open B,$B) || die $!;

	while(<B>){
		chomp;
		my @a=split(/\t/);
		my $p=$a[0];$p=~s/\_.*//;
		$a[2]=~s/\_L\d+\_.*$//;
		$ToEmail{"Failed "}{$a[2]."($p)"}{$a[0]}++;
	}
}
#print Dumper %ToEmail;

while(<G>){
	chomp;
	my @a=split(/\t/);
	my @b=split(/\//,$a[$#a]);
	
	$a[4]=~/((Zebra|Panda)\d+)(\_|\/)((CL|V)\d+)/; my ($Mc,$Fcl)=($1,$4);
	$b[$#b]=~s/\*\.fq\.gz//;
	my $HtmlPE=join("/",$FileHash{output},@a[0,1],"$Mc\_$Fcl","2_FASTQC",$b[$#b]."_1.fq_fastqc.html");
	my $HtmlSE=join("/",$FileHash{output},@a[0,1],"$Mc\_$Fcl","2_FASTQC",$b[$#b].".fq_fastqc.html");
	while(! -e $HtmlPE and ! -e $HtmlSE){
		my $time=strftime("%Y%m%d %H:%M:%S",localtime());
		print "[$time] $indir $a[2] $b[$#b]\n";
		sleep 3600;
	}
	system("cp ".join("/",$FileHash{output},@a[0,1],"$Mc\_$Fcl","2_FASTQC",$b[$#b]."*.fq_fastqc.html")." $indir/$a[0]/$a[2]/");
	$ToEmail{Succeed}{"$Mc\_$Fcl($a[0])"}{$a[2]}++;
}
my $out;
foreach my $k1(sort keys %ToEmail){
	my $SubH1=$ToEmail{$k1};

	foreach my $k2(sort keys %$SubH1){
		my $SubH2=$SubH1->{$k2};
	
		my $number=scalar(keys %$SubH2);
		$out.="$k1: $number Sample(s) for $k2\\n";
	}
}

$indir=~/NewData\/(\d+)/; my $date=$1;
open O,">$indir/EmailMessage.py";
$EmailList{CC}=~s/\,$/\]/;
$EmailList{TO}=~s/\,$/\]/;
print O "
#!/usr/bin/python
# -*- coding: UTF-8 -*-

import smtplib
from email.mime.text import MIMEText
from email.header import Header

tolist=[$EmailList{TO}
cclist=[$EmailList{CC}

msg = MIMEText(\"<<New Data generated by BGIAUS Lab>>\\n\\n$out\\nYou can check the FASTQC of succeed runs in Sharefolder:\\n\\nMacOS: smb://192.168.233.251/\\nWindows: File Explorer-> Map network drive-> \\\\192.168.233.251\\n\\n05.BGIAU-Bioinformatics/NewData/$date\\n\", 'plain', 'utf-8')

from_addr = \"bgi-auslab\@genomics.cn\"
passwd = \"Ti-bG0Ax\"
msg['To']=\",\".join(tolist)
msg['Cc']=\",\".join(cclist)
msg['Subject']=Header(u'New Data generated in $date','utf-8').encode()

s = smtplib.SMTP('mail.genomics.cn')
s.starttls()
s.login(from_addr, passwd)
s.sendmail(from_addr, tolist + cclist, msg.as_string())
s.quit()
";
system("python $indir/EmailMessage.py");
